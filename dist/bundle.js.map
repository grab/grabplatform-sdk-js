{"version":3,"file":"bundle.js","sources":["../src/open_id_configuration.js","../node_modules/crypto-js/core.js","../node_modules/crypto-js/sha256.js","../node_modules/crypto-js/enc-base64.js","../src/utils.js","../src/store.js","../src/authorization_request_handler.js","../src/token_request_handler.js","../src/index.js"],"sourcesContent":["/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport class OpenIDConfiguration {\n  constructor (\n    authorizationEndpoint,\n    tokenEndpoint,\n    idTokenVerificationEndpoint\n  ) {\n    this.authorizationEndpoint = authorizationEndpoint\n    this.tokenEndpoint = tokenEndpoint\n    this.idTokenVerificationEndpoint = idTokenVerificationEndpoint\n  }\n\n  static fromJSON (responseJSON) {\n    return new OpenIDConfiguration(\n      responseJSON['authorization_endpoint'],\n      responseJSON['token_endpoint'],\n      responseJSON['id_token_verification_endpoint']\n    )\n  }\n\n  static fetchConfig (openIdUrl) {\n    let uri = `${openIdUrl}/.well-known/openid-configuration`\n    let options = {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    }\n    return fetch(uri, options)\n      .then(response => response.json())\n      .then(config => OpenIDConfiguration.fromJSON(config))\n      .catch(error => console.error('failed to fetch openid configuration from issuer', error))\n  }\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport sha256 from 'crypto-js/sha256'\nimport Base64 from 'crypto-js/enc-base64'\n\nexport function generateRandomString (length) {\n  let text = ''\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return text\n}\n\nexport function base64URLEncode (str) {\n  return str.toString(Base64).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n}\n\nexport function generateCodeVerifier (len) {\n  return base64URLEncode(generateRandomString(len))\n}\n\nexport function generateCodeChallenge (codeVerifier) {\n  return base64URLEncode(sha256(codeVerifier))\n}\n\nexport function getParams (query = window.location.search) {\n  return query.replace(/^\\?|#/, '').split('&').reduce((json, item) => {\n    if (item) {\n      item = item.split('=').map((value) => decodeURIComponent(value))\n      json[item[0]] = item[1]\n    }\n    return json\n  }, {})\n}\n\nexport function htmlEncode (html) {\n  if (!html) {\n    return undefined\n  }\n  var anchorNode = document.createElement('a')\n  anchorNode.appendChild(document.createTextNode(html))\n  return anchorNode.innerHTML\n}\n","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst namespace = 'grabid'\n\nexport default class Store {\n  static getKey (key) {\n    return `${namespace}:${key}`\n  }\n\n  static getItem (key) {\n    return window.localStorage.getItem(this.getKey(key))\n  }\n\n  static setItem (key, value) {\n    window.localStorage.setItem(this.getKey(key), value)\n  }\n\n  static removeItem (key) {\n    window.localStorage.removeItem(this.getKey(key))\n  }\n\n  static clear () {\n    window.localStorage.clear()\n  }\n}\n","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { generateCodeChallenge, generateCodeVerifier, generateRandomString } from './utils'\nimport Store from './store'\n\nconst nonce = generateRandomString(16)\nconst state = generateRandomString(7)\nconst codeVerifier = generateCodeVerifier(64)\nconst codeChallenge = generateCodeChallenge(codeVerifier)\nconst codeChallengeMethod = 'S256'\n\nexport class AuthorizationRequestHandler {\n  performAuthorizationRequest (configuration, request) {\n    Store.setItem('login_return_uri', window.location.href)\n    Store.setItem('nonce', nonce)\n    Store.setItem('state', state)\n    Store.setItem('code_verifier', codeVerifier)\n\n    let requestMap = {\n      client_id: request.clientId,\n      scope: request.scope,\n      response_type: request.responseType,\n      redirect_uri: request.redirectUri,\n      nonce: nonce,\n      state: state,\n      code_challenge_method: codeChallengeMethod,\n      code_challenge: codeChallenge,\n      acr_values: request.acrValues\n    }\n\n    let baseUrl = configuration.authorizationEndpoint\n    let params = Object.entries(requestMap).map(([key, val]) => `${key}=${val}`).join('&')\n\n    let url = `${baseUrl}?${params}`\n\n    window.location.assign(url)\n  }\n}\n\nexport class AuthorizationRequest {\n  static RESPONSE_TYPE_CODE = 'code'\n  static RESPONSE_TYPE_TOKEN = 'token'\n\n  constructor (\n    clientId,\n    redirectUri,\n    scope,\n    responseType,\n    acrValues\n  ) {\n    this.clientId = clientId\n    this.redirectUri = redirectUri\n    this.scope = scope\n    this.responseType = responseType\n    this.acrValues = acrValues\n  }\n}\n","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport class TokenRequestHandler {\n  performTokenRequest (configuration, request) {\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(request)\n    }\n\n    return fetch(configuration.tokenEndpoint, options)\n      .then(response => response.json())\n      .catch(error => console.error('failed to POST token request', error))\n  }\n}\n\nexport class TokenRequest {\n    static GRANT_TYPE_AUTHORIZATION_CODE = 'authorization_code';\n\n    constructor (\n      clientId,\n      codeVerifier,\n      grantType,\n      redirectUri,\n      code\n    ) {\n      this.clientId = clientId\n      this.codeVerifier = codeVerifier\n      this.grantType = grantType\n      this.redirectUri = redirectUri\n      this.code = code\n    }\n\n    toJSON () {\n      return {\n        client_id: this.clientId,\n        code_verifier: this.codeVerifier,\n        grant_type: this.grantType,\n        redirect_uri: this.redirectUri,\n        code: this.code\n      }\n    }\n}\n\nexport class TokenResponse {\n  constructor (accessToken, idToken, tokenType, expiresIn) {\n    this.accessToken = accessToken\n    this.idToken = idToken\n    this.tokenType = tokenType\n    this.expiresIn = expiresIn\n  }\n\n  static fromJSON (responseJSON) {\n    return new TokenResponse(\n      responseJSON['access_token'],\n      responseJSON['id_token'],\n      responseJSON['token_type'],\n      responseJSON['expires_in']\n    )\n  }\n}\n","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { OpenIDConfiguration } from './open_id_configuration'\nimport { AuthorizationRequest, AuthorizationRequestHandler } from './authorization_request_handler'\nimport { TokenRequest, TokenRequestHandler, TokenResponse } from './token_request_handler'\nimport { getParams, htmlEncode } from './utils'\nimport Store from './store'\n\nexport default class App {\n  constructor (openIdUrl, appConfig) {\n    this.openIdUrl = openIdUrl\n    this.clientId = appConfig.clientId\n    this.redirectUri = appConfig.redirectUri\n    this.scope = appConfig.scope\n    this.acrValues = appConfig.acrValues\n\n    this.authorizationRequestHandler = new AuthorizationRequestHandler()\n    this.tokenRequestHandler = new TokenRequestHandler()\n    this.openIDConfiguration = undefined\n  }\n\n  getOpenIdConfiguration () {\n    return OpenIDConfiguration.fetchConfig(this.openIdUrl)\n      .then(response => { this.openIDConfiguration = response })\n      .catch(error => console.error('fail to get open id config', error))\n  }\n\n  makeAuthorizationRequest () {\n    if (!this.openIDConfiguration) {\n      throw new Error('Please fetch OpenID configuration first')\n    }\n\n    let authorizationRequest = new AuthorizationRequest(\n      this.clientId,\n      this.redirectUri,\n      this.scope,\n      AuthorizationRequest.RESPONSE_TYPE_CODE,\n      this.acrValues\n    )\n    this.authorizationRequestHandler.performAuthorizationRequest(this.openIDConfiguration, authorizationRequest)\n  }\n\n  makeImplicitAuthorizationRequest () {\n    if (!this.openIDConfiguration) {\n      throw new Error('Please fetch OpenID configuration first')\n    }\n\n    let authorizationRequest = new AuthorizationRequest(\n      this.clientId,\n      this.redirectUri,\n      this.scope,\n      AuthorizationRequest.RESPONSE_TYPE_TOKEN,\n      this.acrValues\n    )\n    this.authorizationRequestHandler.performAuthorizationRequest(this.openIDConfiguration, authorizationRequest)\n  }\n\n  static getLoginReturnURI () {\n    return Store.getItem('login_return_uri')\n  }\n\n  static handleAuthorizationCodeFlowResponse () {\n    let state = Store.getItem('state')\n    let params = getParams(window.location.search)\n\n    if (params === null || state !== params['state']) {\n      let errorMsg = {\n        name: 'code mismatch',\n        message: 'This could be caused by multiple browser windows attempting to authenticate to GrabId at the same time'\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else if (params['error']) {\n      let errorMsg = {\n        name: htmlEncode(params['error']),\n        message: htmlEncode(params['error_description'])\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else {\n      let code = params['code']\n      if (code) {\n        Store.setItem('code', code)\n      }\n    }\n  }\n\n  static handleImplicitFlowResponse () {\n    let state = Store.getItem('state')\n    let params = getParams(window.location.hash)\n\n    if (params === null || state !== params['state']) {\n      let errorMsg = {\n        name: 'code mismatch',\n        message: 'This could be caused by multiple browser windows attempting to authenticate to GrabId at the same time'\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else if (params['error']) {\n      let errorMsg = {\n        name: htmlEncode(params['error']),\n        message: htmlEncode(params['error_description'])\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else {\n      let accessToken = params['access_token']\n      if (accessToken) {\n        Store.setItem('access_token', accessToken)\n      }\n\n      let idToken = params['id_token']\n      if (idToken) {\n        Store.setItem('id_token', idToken)\n      }\n    }\n\n    return App.getResult()\n  }\n\n  makeTokenRequest () {\n    if (!this.openIDConfiguration) {\n      throw new Error('Please fetch OpenID configuration first')\n    }\n\n    let codeVerifier = Store.getItem('code_verifier')\n    let code = Store.getItem('code')\n\n    if (!codeVerifier || !code) {\n      throw new Error('Please get authorization code first')\n    }\n\n    let tokenRequest = new TokenRequest(\n      this.clientId,\n      codeVerifier,\n      TokenRequest.GRANT_TYPE_AUTHORIZATION_CODE,\n      this.redirectUri,\n      code\n    )\n\n    return this.tokenRequestHandler.performTokenRequest(this.openIDConfiguration, tokenRequest)\n      .then(response => {\n        let tokenResponse = TokenResponse.fromJSON(response)\n        Store.setItem('access_token', tokenResponse.accessToken)\n        Store.setItem('id_token', tokenResponse.idToken)\n      })\n  }\n\n  makeTestEndpointRequest () {\n    let accessToken = Store.getItem('access_token')\n    let uri = 'https://api.stg-myteksi.com/grabid/v1/oauth2/test_res'\n    let options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }\n\n    return fetch(uri, options)\n      .then(response => response.json())\n      .catch(error => console.error('failed to make test request', error))\n  }\n\n  static getResult () {\n    return {\n      accessToken: Store.getItem('access_token'),\n      codeVerifier: Store.getItem('code_verifier'),\n      idToken: Store.getItem('id_token'),\n      nonce: Store.getItem('nonce'),\n      state: Store.getItem('state')\n    }\n  }\n}\n"],"names":["OpenIDConfiguration","authorizationEndpoint","tokenEndpoint","idTokenVerificationEndpoint","responseJSON","openIdUrl","uri","options","method","mode","headers","fetch","then","response","json","config","fromJSON","catch","error","console","this","require$$0","generateRandomString","length","text","possible","i","charAt","Math","floor","random","base64URLEncode","str","toString","Base64","replace","generateCodeVerifier","len","generateCodeChallenge","codeVerifier","sha256","getParams","query","window","location","search","split","reduce","item","map","value","decodeURIComponent","htmlEncode","html","undefined","anchorNode","document","createElement","appendChild","createTextNode","innerHTML","namespace","Store","key","localStorage","getItem","getKey","setItem","removeItem","clear","nonce","state","codeChallenge","codeChallengeMethod","AuthorizationRequestHandler","configuration","request","href","requestMap","client_id","clientId","scope","response_type","responseType","redirect_uri","redirectUri","code_challenge_method","code_challenge","acr_values","acrValues","baseUrl","params","Object","entries","val","join","url","assign","AuthorizationRequest","TokenRequestHandler","body","JSON","stringify","TokenRequest","grantType","code","code_verifier","grant_type","TokenResponse","accessToken","idToken","tokenType","expiresIn","App","appConfig","authorizationRequestHandler","tokenRequestHandler","openIDConfiguration","fetchConfig","Error","authorizationRequest","RESPONSE_TYPE_CODE","performAuthorizationRequest","RESPONSE_TYPE_TOKEN","tokenRequest","GRANT_TYPE_AUTHORIZATION_CODE","performTokenRequest","tokenResponse","errorMsg","name","message","hash","getResult"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;;;;;AAQA,MAAaA,mBAAb;EAAA;EAAA;EACE,+BACEC,qBADF,EAEEC,aAFF,EAGEC,2BAHF,EAIE;EAAA;;EACA,SAAKF,qBAAL,GAA6BA,qBAA7B;EACA,SAAKC,aAAL,GAAqBA,aAArB;EACA,SAAKC,2BAAL,GAAmCA,2BAAnC;EACD;;EATH;EAAA;EAAA,6BAWmBC,YAXnB,EAWiC;EAC7B,aAAO,IAAIJ,mBAAJ,CACLI,YAAY,CAAC,wBAAD,CADP,EAELA,YAAY,CAAC,gBAAD,CAFP,EAGLA,YAAY,CAAC,gCAAD,CAHP,CAAP;EAKD;EAjBH;EAAA;EAAA,gCAmBsBC,SAnBtB,EAmBiC;EAC7B,UAAIC,GAAG,aAAMD,SAAN,sCAAP;EACA,UAAIE,OAAO,GAAG;EACZC,QAAAA,MAAM,EAAE,KADI;EAEZC,QAAAA,IAAI,EAAE,MAFM;EAGZC,QAAAA,OAAO,EAAE;EACP,0BAAgB;EADT;EAHG,OAAd;EAOA,aAAOC,KAAK,CAACL,GAAD,EAAMC,OAAN,CAAL,CACJK,IADI,CACC,UAAAC,QAAQ;EAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;EAAA,OADT,EAEJF,IAFI,CAEC,UAAAG,MAAM;EAAA,eAAIf,mBAAmB,CAACgB,QAApB,CAA6BD,MAA7B,CAAJ;EAAA,OAFP,EAGJE,KAHI,CAGE,UAAAC,KAAK;EAAA,eAAIC,OAAO,CAACD,KAAR,CAAc,kDAAd,EAAkEA,KAAlE,CAAJ;EAAA,OAHP,CAAP;EAID;EAhCH;;EAAA;EAAA;;;;;;;;;ACRA,EAAC,CAAC,UAAU,IAAI,EAAE,OAAO,EAAE;GAC1B,AAAiC;;IAEhC,cAAc,GAAG,OAAO,GAAG,OAAO,EAAE,CAAC;IACrC,AAQA;GACD,CAACE,cAAI,EAAE,YAAY;;;;;GAKnB,IAAI,QAAQ,GAAG,QAAQ,KAAK,UAAU,IAAI,EAAE,SAAS,EAAE;;;;OAInD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,KAAK,YAAY;WACvC,SAAS,CAAC,GAAG,EAAE;WAEf,OAAO,UAAU,GAAG,EAAE;eAClB,IAAI,OAAO,CAAC;;eAEZ,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC;;eAElB,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC;;eAElB,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;;eAEnB,OAAO,OAAO,CAAC;YAClB,CAAC;QACL,EAAE,EAAC;;;;;OAKJ,IAAI,CAAC,GAAG,EAAE,CAAC;;;;;OAKX,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC;;;;;OAKvB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,YAAY;;;WAGjC,OAAO;;;;;;;;;;;;;;;;;;;eAmBH,MAAM,EAAE,UAAU,SAAS,EAAE;;mBAEzB,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;;mBAG3B,IAAI,SAAS,EAAE;uBACX,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;oBAC5B;;;mBAGD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;uBAC/D,OAAO,CAAC,IAAI,GAAG,YAAY;2BACvB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;wBAC9C,CAAC;oBACL;;;mBAGD,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;;;mBAGjC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;;mBAEtB,OAAO,OAAO,CAAC;gBAClB;;;;;;;;;;;;;;eAcD,MAAM,EAAE,YAAY;mBAChB,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;mBAC7B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;;mBAEzC,OAAO,QAAQ,CAAC;gBACnB;;;;;;;;;;;;;;eAcD,IAAI,EAAE,YAAY;gBACjB;;;;;;;;;;;;;eAaD,KAAK,EAAE,UAAU,UAAU,EAAE;mBACzB,KAAK,IAAI,YAAY,IAAI,UAAU,EAAE;uBACjC,IAAI,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;2BACzC,IAAI,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;wBACjD;oBACJ;;;mBAGD,IAAI,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;uBACvC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;oBACvC;gBACJ;;;;;;;;;;;eAWD,KAAK,EAAE,YAAY;mBACf,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC3C;YACJ,CAAC;QACL,EAAE,CAAC,CAAC;;;;;;;;OAQL,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;;;;;;;;;;;;;WAa1C,IAAI,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE;eAC7B,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;;eAEjC,IAAI,QAAQ,IAAI,SAAS,EAAE;mBACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC5B,MAAM;mBACH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBACpC;YACJ;;;;;;;;;;;;;;;WAeD,QAAQ,EAAE,UAAU,OAAO,EAAE;eACzB,OAAO,CAAC,OAAO,IAAI,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;YAC3C;;;;;;;;;;;;;WAaD,MAAM,EAAE,UAAU,SAAS,EAAE;;eAEzB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;eAC3B,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;eAChC,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;eACjC,IAAI,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC;;;eAGtC,IAAI,CAAC,KAAK,EAAE,CAAC;;;eAGb,IAAI,YAAY,GAAG,CAAC,EAAE;;mBAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;uBACnC,IAAI,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;uBAClE,SAAS,CAAC,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,QAAQ,KAAK,EAAE,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC1F;gBACJ,MAAM;;mBAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,IAAI,CAAC,EAAE;uBACtC,SAAS,CAAC,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC5D;gBACJ;eACD,IAAI,CAAC,QAAQ,IAAI,YAAY,CAAC;;;eAG9B,OAAO,IAAI,CAAC;YACf;;;;;;;;;WASD,KAAK,EAAE,YAAY;;eAEf,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;eACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;;eAG7B,KAAK,CAAC,QAAQ,KAAK,CAAC,CAAC,IAAI,UAAU,KAAK,EAAE,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;eACjE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAC1C;;;;;;;;;;;WAWD,KAAK,EAAE,YAAY;eACf,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;eAClC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;eAElC,OAAO,KAAK,CAAC;YAChB;;;;;;;;;;;;;;;WAeD,MAAM,EAAE,UAAU,MAAM,EAAE;eACtB,IAAI,KAAK,GAAG,EAAE,CAAC;;eAEf,IAAI,CAAC,IAAI,UAAU,GAAG,EAAE;mBACpB,IAAI,GAAG,GAAG,GAAG,CAAC;mBACd,IAAI,GAAG,GAAG,UAAU,CAAC;mBACrB,IAAI,IAAI,GAAG,UAAU,CAAC;;mBAEtB,OAAO,YAAY;uBACf,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;uBACvD,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;uBACvD,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC;uBAC1C,MAAM,IAAI,WAAW,CAAC;uBACtB,MAAM,IAAI,GAAG,CAAC;uBACd,OAAO,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjD;gBACJ,CAAC,CAAC;;eAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;mBACxC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,WAAW,CAAC,CAAC;;mBAEpD,MAAM,GAAG,EAAE,EAAE,GAAG,UAAU,CAAC;mBAC3B,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,WAAW,IAAI,CAAC,CAAC,CAAC;gBACxC;;eAED,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC5C;QACJ,CAAC,CAAC;;;;;OAKH,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC;;;;;OAKvB,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG;;;;;;;;;;;;;;WAclB,SAAS,EAAE,UAAU,SAAS,EAAE;;eAE5B,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;eAC5B,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;;;eAGlC,IAAI,QAAQ,GAAG,EAAE,CAAC;eAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;mBAC/B,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;mBAC1D,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;mBACzC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7C;;eAED,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5B;;;;;;;;;;;;;;;WAeD,KAAK,EAAE,UAAU,MAAM,EAAE;;eAErB,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;;;eAGjC,IAAI,KAAK,GAAG,EAAE,CAAC;eACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,IAAI,CAAC,EAAE;mBACtC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC7E;;eAED,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;YACtD;QACJ,CAAC;;;;;OAKF,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG;;;;;;;;;;;;;;WAcxB,SAAS,EAAE,UAAU,SAAS,EAAE;;eAE5B,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;eAC5B,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;;;eAGlC,IAAI,WAAW,GAAG,EAAE,CAAC;eACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;mBAC/B,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;mBAC1D,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/C;;eAED,OAAO,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC/B;;;;;;;;;;;;;;;WAeD,KAAK,EAAE,UAAU,SAAS,EAAE;;eAExB,IAAI,eAAe,GAAG,SAAS,CAAC,MAAM,CAAC;;;eAGvC,IAAI,KAAK,GAAG,EAAE,CAAC;eACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;mBACtC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5E;;eAED,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YACrD;QACJ,CAAC;;;;;OAKF,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG;;;;;;;;;;;;;;WAcpB,SAAS,EAAE,UAAU,SAAS,EAAE;eAC5B,IAAI;mBACA,OAAO,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAClE,CAAC,OAAO,CAAC,EAAE;mBACR,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBAC3C;YACJ;;;;;;;;;;;;;;;WAeD,KAAK,EAAE,UAAU,OAAO,EAAE;eACtB,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9D;QACJ,CAAC;;;;;;;;;OASF,IAAI,sBAAsB,GAAG,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC;;;;;;;;WAQpE,KAAK,EAAE,YAAY;;eAEf,IAAI,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC;eAClC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACxB;;;;;;;;;;;;WAYD,OAAO,EAAE,UAAU,IAAI,EAAE;;eAErB,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;mBACzB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3B;;;eAGD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;eACxB,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC;YACrC;;;;;;;;;;;;;;;;WAgBD,QAAQ,EAAE,UAAU,OAAO,EAAE;;eAEzB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;eACtB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;eAC3B,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;eACjC,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;eAC/B,IAAI,cAAc,GAAG,SAAS,GAAG,CAAC,CAAC;;;eAGnC,IAAI,YAAY,GAAG,YAAY,GAAG,cAAc,CAAC;eACjD,IAAI,OAAO,EAAE;;mBAET,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC1C,MAAM;;;mBAGH,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;gBACxE;;;eAGD,IAAI,WAAW,GAAG,YAAY,GAAG,SAAS,CAAC;;;eAG3C,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC;;;eAG1D,IAAI,WAAW,EAAE;mBACb,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,WAAW,EAAE,MAAM,IAAI,SAAS,EAAE;;uBAE5D,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;oBAC3C;;;mBAGD,IAAI,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;mBACtD,IAAI,CAAC,QAAQ,IAAI,WAAW,CAAC;gBAChC;;;eAGD,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;YAC1D;;;;;;;;;;;WAWD,KAAK,EAAE,YAAY;eACf,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;eAClC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;;eAEjC,OAAO,KAAK,CAAC;YAChB;;WAED,cAAc,EAAE,CAAC;QACpB,CAAC,CAAC;;;;;;;OAOH,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,sBAAsB,CAAC,MAAM,CAAC;;;;WAItD,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE;;;;;;;;;;;WAWlB,IAAI,EAAE,UAAU,GAAG,EAAE;;eAEjB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;;eAGhC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB;;;;;;;;;WASD,KAAK,EAAE,YAAY;;eAEf,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;eAGxC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB;;;;;;;;;;;;;;WAcD,MAAM,EAAE,UAAU,aAAa,EAAE;;eAE7B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;;;eAG5B,IAAI,CAAC,QAAQ,EAAE,CAAC;;;eAGhB,OAAO,IAAI,CAAC;YACf;;;;;;;;;;;;;;;;WAgBD,QAAQ,EAAE,UAAU,aAAa,EAAE;;eAE/B,IAAI,aAAa,EAAE;mBACf,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gBAC/B;;;eAGD,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;eAE9B,OAAO,IAAI,CAAC;YACf;;WAED,SAAS,EAAE,GAAG,CAAC,EAAE;;;;;;;;;;;;;;;WAejB,aAAa,EAAE,UAAU,MAAM,EAAE;eAC7B,OAAO,UAAU,OAAO,EAAE,GAAG,EAAE;mBAC3B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACjD,CAAC;YACL;;;;;;;;;;;;;;;WAeD,iBAAiB,EAAE,UAAU,MAAM,EAAE;eACjC,OAAO,UAAU,OAAO,EAAE,GAAG,EAAE;mBAC3B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC9D,CAAC;YACL;QACJ,CAAC,CAAC;;;;;OAKH,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;;OAEzB,OAAO,CAAC,CAAC;IACZ,CAAC,IAAI,CAAC,CAAC,CAAC;;;GAGT,OAAO,QAAQ,CAAC;;GAEhB,CAAC;;;;ACvvBF,EAAC,CAAC,UAAU,IAAI,EAAE,OAAO,EAAE;GAC1B,AAAiC;;IAEhC,cAAc,GAAG,OAAO,GAAG,OAAO,CAACC,IAAiB,CAAC,CAAC;IACtD,AAQA;GACD,CAACD,cAAI,EAAE,UAAU,QAAQ,EAAE;;GAE3B,CAAC,UAAU,IAAI,EAAE;;OAEb,IAAI,CAAC,GAAG,QAAQ,CAAC;OACjB,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;OAClB,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;OAChC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;OAC1B,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;;;OAGpB,IAAI,CAAC,GAAG,EAAE,CAAC;OACX,IAAI,CAAC,GAAG,EAAE,CAAC;;;OAGX,CAAC,YAAY;WACT,SAAS,OAAO,CAAC,CAAC,EAAE;eAChB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;eACzB,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,KAAK,EAAE,MAAM,EAAE,EAAE;mBAC5C,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE;uBACf,OAAO,KAAK,CAAC;oBAChB;gBACJ;;eAED,OAAO,IAAI,CAAC;YACf;;WAED,SAAS,iBAAiB,CAAC,CAAC,EAAE;eAC1B,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,WAAW,IAAI,CAAC,CAAC;YAC5C;;WAED,IAAI,CAAC,GAAG,CAAC,CAAC;WACV,IAAI,MAAM,GAAG,CAAC,CAAC;WACf,OAAO,MAAM,GAAG,EAAE,EAAE;eAChB,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;mBACZ,IAAI,MAAM,GAAG,CAAC,EAAE;uBACZ,CAAC,CAAC,MAAM,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrD;mBACD,CAAC,CAAC,MAAM,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;mBAElD,MAAM,EAAE,CAAC;gBACZ;;eAED,CAAC,EAAE,CAAC;YACP;QACJ,EAAE,EAAE;;;OAGL,IAAI,CAAC,GAAG,EAAE,CAAC;;;;;OAKX,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;WACvC,QAAQ,EAAE,YAAY;eAClB,IAAI,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C;;WAED,eAAe,EAAE,UAAU,CAAC,EAAE,MAAM,EAAE;;eAElC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;;eAGzB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;eACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;;eAGb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;mBACzB,IAAI,CAAC,GAAG,EAAE,EAAE;uBACR,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC5B,MAAM;uBACH,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;uBACxB,IAAI,MAAM,IAAI,CAAC,CAAC,OAAO,IAAI,EAAE,KAAK,OAAO,KAAK,CAAC,CAAC;sCACjC,CAAC,OAAO,IAAI,EAAE,KAAK,OAAO,KAAK,EAAE,CAAC,CAAC;uCAClC,OAAO,KAAK,CAAC,CAAC,CAAC;;uBAE/B,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;uBACvB,IAAI,MAAM,IAAI,CAAC,CAAC,OAAO,IAAI,EAAE,KAAK,OAAO,KAAK,EAAE,CAAC;sCAClC,CAAC,OAAO,IAAI,EAAE,KAAK,OAAO,KAAK,EAAE,CAAC,CAAC;uCAClC,OAAO,KAAK,EAAE,CAAC,CAAC;;uBAEhC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;oBACjD;;mBAED,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;mBAC7B,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;mBAEtC,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;mBAC3F,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;;mBAE3F,IAAI,EAAE,GAAG,CAAC,GAAG,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;mBACvC,IAAI,EAAE,GAAG,MAAM,GAAG,GAAG,CAAC;;mBAEtB,CAAC,GAAG,CAAC,CAAC;mBACN,CAAC,GAAG,CAAC,CAAC;mBACN,CAAC,GAAG,CAAC,CAAC;mBACN,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;mBACjB,CAAC,GAAG,CAAC,CAAC;mBACN,CAAC,GAAG,CAAC,CAAC;mBACN,CAAC,GAAG,CAAC,CAAC;mBACN,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;gBACrB;;;eAGD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzB;;WAED,WAAW,EAAE,YAAY;;eAErB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;eACtB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;;eAE3B,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;eACtC,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;;;eAGlC,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,IAAI,KAAK,EAAE,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;eAC5D,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,WAAW,CAAC,CAAC;eACvF,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,UAAU,CAAC;eAC7D,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;;;eAGrC,IAAI,CAAC,QAAQ,EAAE,CAAC;;;eAGhB,OAAO,IAAI,CAAC,KAAK,CAAC;YACrB;;WAED,KAAK,EAAE,YAAY;eACf,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;eACpC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;;eAEjC,OAAO,KAAK,CAAC;YAChB;QACJ,CAAC,CAAC;;;;;;;;;;;;;;;;OAgBH,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;OAgBxC,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC,IAAI,CAAC,EAAE;;;GAGT,OAAO,QAAQ,CAAC,MAAM,CAAC;;GAEvB,CAAC;;;;ACtMF,EAAC,CAAC,UAAU,IAAI,EAAE,OAAO,EAAE;GAC1B,AAAiC;;IAEhC,cAAc,GAAG,OAAO,GAAG,OAAO,CAACC,IAAiB,CAAC,CAAC;IACtD,AAQA;GACD,CAACD,cAAI,EAAE,UAAU,QAAQ,EAAE;;GAE3B,CAAC,YAAY;;OAET,IAAI,CAAC,GAAG,QAAQ,CAAC;OACjB,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;OAClB,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;OAChC,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;;;;;OAKlB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG;;;;;;;;;;;;;;WAcxB,SAAS,EAAE,UAAU,SAAS,EAAE;;eAE5B,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;eAC5B,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;eAClC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;;;eAGpB,SAAS,CAAC,KAAK,EAAE,CAAC;;;eAGlB,IAAI,WAAW,GAAG,EAAE,CAAC;eACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE;mBAClC,IAAI,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC;mBACvE,IAAI,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;mBACvE,IAAI,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;;mBAEvE,IAAI,OAAO,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;;mBAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE;uBACvD,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBACpE;gBACJ;;;eAGD,IAAI,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;eACjC,IAAI,WAAW,EAAE;mBACb,OAAO,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;uBAC3B,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACjC;gBACJ;;eAED,OAAO,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC/B;;;;;;;;;;;;;;;WAeD,KAAK,EAAE,UAAU,SAAS,EAAE;;eAExB,IAAI,eAAe,GAAG,SAAS,CAAC,MAAM,CAAC;eACvC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;eACpB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;;eAElC,IAAI,CAAC,UAAU,EAAE;uBACT,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;uBACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;2BACjC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBACrC;gBACR;;;eAGD,IAAI,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;eACjC,IAAI,WAAW,EAAE;mBACb,IAAI,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;mBAClD,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;uBACrB,eAAe,GAAG,YAAY,CAAC;oBAClC;gBACJ;;;eAGD,OAAO,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;;YAE5D;;WAED,IAAI,EAAE,mEAAmE;QAC5E,CAAC;;OAEF,SAAS,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,UAAU,EAAE;SACzD,IAAI,KAAK,GAAG,EAAE,CAAC;SACf,IAAI,MAAM,GAAG,CAAC,CAAC;SACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,CAAC,EAAE,EAAE;aACtC,IAAI,CAAC,GAAG,CAAC,EAAE;iBACP,IAAI,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrE,IAAI,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;iBACtE,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;iBAClE,MAAM,EAAE,CAAC;cACZ;UACJ;SACD,OAAO,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxC;IACJ,EAAE,EAAE;;;GAGL,OAAO,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC;;GAE3B,CAAC;;;ECtIF;;;;;;;AAQA,EAGO,SAASE,oBAAT,CAA+BC,MAA/B,EAAuC;EAC5C,MAAIC,IAAI,GAAG,EAAX;EACA,MAAIC,QAAQ,GAAG,gEAAf;;EACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;EAC/BF,IAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;EACD;;EACD,SAAOC,IAAP;EACD;AAED,EAAO,SAASO,eAAT,CAA0BC,GAA1B,EAA+B;EACpC,SAAOA,GAAG,CAACC,QAAJ,CAAaC,SAAb,EAAqBC,OAArB,CAA6B,IAA7B,EAAmC,EAAnC,EAAuCA,OAAvC,CAA+C,KAA/C,EAAsD,GAAtD,EAA2DA,OAA3D,CAAmE,KAAnE,EAA0E,GAA1E,CAAP;EACD;AAED,EAAO,SAASC,oBAAT,CAA+BC,GAA/B,EAAoC;EACzC,SAAON,eAAe,CAACT,oBAAoB,CAACe,GAAD,CAArB,CAAtB;EACD;AAED,EAAO,SAASC,qBAAT,CAAgCC,YAAhC,EAA8C;EACnD,SAAOR,eAAe,CAACS,MAAM,CAACD,YAAD,CAAP,CAAtB;EACD;AAED,EAAO,SAASE,SAAT,GAAoD;EAAA,MAAhCC,KAAgC,uEAAxBC,MAAM,CAACC,QAAP,CAAgBC,MAAQ;EACzD,SAAOH,KAAK,CAACP,OAAN,CAAc,OAAd,EAAuB,EAAvB,EAA2BW,KAA3B,CAAiC,GAAjC,EAAsCC,MAAtC,CAA6C,UAACjC,IAAD,EAAOkC,IAAP,EAAgB;EAClE,QAAIA,IAAJ,EAAU;EACRA,MAAAA,IAAI,GAAGA,IAAI,CAACF,KAAL,CAAW,GAAX,EAAgBG,GAAhB,CAAoB,UAACC,KAAD;EAAA,eAAWC,kBAAkB,CAACD,KAAD,CAA7B;EAAA,OAApB,CAAP;EACApC,MAAAA,IAAI,CAACkC,IAAI,CAAC,CAAD,CAAL,CAAJ,GAAgBA,IAAI,CAAC,CAAD,CAApB;EACD;;EACD,WAAOlC,IAAP;EACD,GANM,EAMJ,EANI,CAAP;EAOD;AAED,EAAO,SAASsC,UAAT,CAAqBC,IAArB,EAA2B;EAChC,MAAI,CAACA,IAAL,EAAW;EACT,WAAOC,SAAP;EACD;;EACD,MAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAjB;EACAF,EAAAA,UAAU,CAACG,WAAX,CAAuBF,QAAQ,CAACG,cAAT,CAAwBN,IAAxB,CAAvB;EACA,SAAOE,UAAU,CAACK,SAAlB;EACD;;ECjDD;;;;;;;EAQA,IAAMC,SAAS,GAAG,QAAlB;;MAEqBC;;;;;;;;;6BACJC,KAAK;EAClB,uBAAUF,SAAV,cAAuBE,GAAvB;EACD;;;8BAEeA,KAAK;EACnB,aAAOpB,MAAM,CAACqB,YAAP,CAAoBC,OAApB,CAA4B,KAAKC,MAAL,CAAYH,GAAZ,CAA5B,CAAP;EACD;;;8BAEeA,KAAKb,OAAO;EAC1BP,MAAAA,MAAM,CAACqB,YAAP,CAAoBG,OAApB,CAA4B,KAAKD,MAAL,CAAYH,GAAZ,CAA5B,EAA8Cb,KAA9C;EACD;;;iCAEkBa,KAAK;EACtBpB,MAAAA,MAAM,CAACqB,YAAP,CAAoBI,UAApB,CAA+B,KAAKF,MAAL,CAAYH,GAAZ,CAA/B;EACD;;;8BAEe;EACdpB,MAAAA,MAAM,CAACqB,YAAP,CAAoBK,KAApB;EACD;;;;;;EClBH,IAAMC,KAAK,GAAGhD,oBAAoB,CAAC,EAAD,CAAlC;EACA,IAAMiD,KAAK,GAAGjD,oBAAoB,CAAC,CAAD,CAAlC;EACA,IAAMiB,YAAY,GAAGH,oBAAoB,CAAC,EAAD,CAAzC;EACA,IAAMoC,aAAa,GAAGlC,qBAAqB,CAACC,YAAD,CAA3C;EACA,IAAMkC,mBAAmB,GAAG,MAA5B;AAEA,MAAaC,2BAAb;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA;EAAA;EAAA,gDAC+BC,aAD/B,EAC8CC,OAD9C,EACuD;EACnDd,MAAAA,KAAK,CAACK,OAAN,CAAc,kBAAd,EAAkCxB,MAAM,CAACC,QAAP,CAAgBiC,IAAlD;EACAf,MAAAA,KAAK,CAACK,OAAN,CAAc,OAAd,EAAuBG,KAAvB;EACAR,MAAAA,KAAK,CAACK,OAAN,CAAc,OAAd,EAAuBI,KAAvB;EACAT,MAAAA,KAAK,CAACK,OAAN,CAAc,eAAd,EAA+B5B,YAA/B;EAEA,UAAIuC,UAAU,GAAG;EACfC,QAAAA,SAAS,EAAEH,OAAO,CAACI,QADJ;EAEfC,QAAAA,KAAK,EAAEL,OAAO,CAACK,KAFA;EAGfC,QAAAA,aAAa,EAAEN,OAAO,CAACO,YAHR;EAIfC,QAAAA,YAAY,EAAER,OAAO,CAACS,WAJP;EAKff,QAAAA,KAAK,EAAEA,KALQ;EAMfC,QAAAA,KAAK,EAAEA,KANQ;EAOfe,QAAAA,qBAAqB,EAAEb,mBAPR;EAQfc,QAAAA,cAAc,EAAEf,aARD;EASfgB,QAAAA,UAAU,EAAEZ,OAAO,CAACa;EATL,OAAjB;EAYA,UAAIC,OAAO,GAAGf,aAAa,CAAC1E,qBAA5B;EACA,UAAI0F,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAef,UAAf,EAA2B7B,GAA3B,CAA+B;EAAA;EAAA,YAAEc,GAAF;EAAA,YAAO+B,GAAP;;EAAA,yBAAmB/B,GAAnB,cAA0B+B,GAA1B;EAAA,OAA/B,EAAgEC,IAAhE,CAAqE,GAArE,CAAb;EAEA,UAAIC,GAAG,aAAMN,OAAN,cAAiBC,MAAjB,CAAP;EAEAhD,MAAAA,MAAM,CAACC,QAAP,CAAgBqD,MAAhB,CAAuBD,GAAvB;EACD;EAzBH;;EAAA;EAAA;AA4BA,MAAaE,oBAAb,GAIE,8BACElB,QADF,EAEEK,WAFF,EAGEJ,KAHF,EAIEE,YAJF,EAKEM,SALF,EAME;EAAA;;EACA,OAAKT,QAAL,GAAgBA,QAAhB;EACA,OAAKK,WAAL,GAAmBA,WAAnB;EACA,OAAKJ,KAAL,GAAaA,KAAb;EACA,OAAKE,YAAL,GAAoBA,YAApB;EACA,OAAKM,SAAL,GAAiBA,SAAjB;EACD,CAhBH;wBAAaS;;;WACiB;;wBADjBA;;;WAEkB;;;EC/C/B;;;;;;;AAQA,MAAaC,mBAAb;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA;EAAA;EAAA,wCACuBxB,aADvB,EACsCC,OADtC,EAC+C;EAC3C,UAAIrE,OAAO,GAAG;EACZC,QAAAA,MAAM,EAAE,MADI;EAEZE,QAAAA,OAAO,EAAE;EACP,0BAAgB;EADT,SAFG;EAKZ0F,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe1B,OAAf;EALM,OAAd;EAQA,aAAOjE,KAAK,CAACgE,aAAa,CAACzE,aAAf,EAA8BK,OAA9B,CAAL,CACJK,IADI,CACC,UAAAC,QAAQ;EAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;EAAA,OADT,EAEJG,KAFI,CAEE,UAAAC,KAAK;EAAA,eAAIC,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C,CAAJ;EAAA,OAFP,CAAP;EAGD;EAbH;;EAAA;EAAA;AAgBA,MAAaqF,YAAb;EAAA;EAAA;EAGI,wBACEvB,QADF,EAEEzC,YAFF,EAGEiE,SAHF,EAIEnB,WAJF,EAKEoB,IALF,EAME;EAAA;;EACA,SAAKzB,QAAL,GAAgBA,QAAhB;EACA,SAAKzC,YAAL,GAAoBA,YAApB;EACA,SAAKiE,SAAL,GAAiBA,SAAjB;EACA,SAAKnB,WAAL,GAAmBA,WAAnB;EACA,SAAKoB,IAAL,GAAYA,IAAZ;EACD;;EAfL;EAAA;EAAA,6BAiBc;EACR,aAAO;EACL1B,QAAAA,SAAS,EAAE,KAAKC,QADX;EAEL0B,QAAAA,aAAa,EAAE,KAAKnE,YAFf;EAGLoE,QAAAA,UAAU,EAAE,KAAKH,SAHZ;EAILpB,QAAAA,YAAY,EAAE,KAAKC,WAJd;EAKLoB,QAAAA,IAAI,EAAE,KAAKA;EALN,OAAP;EAOD;EAzBL;;EAAA;EAAA;wBAAaF;;;WAC8B;;AA2B3C,MAAaK,aAAb;EAAA;EAAA;EACE,yBAAaC,WAAb,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyD;EAAA;;EACvD,SAAKH,WAAL,GAAmBA,WAAnB;EACA,SAAKC,OAAL,GAAeA,OAAf;EACA,SAAKC,SAAL,GAAiBA,SAAjB;EACA,SAAKC,SAAL,GAAiBA,SAAjB;EACD;;EANH;EAAA;EAAA,6BAQmB5G,YARnB,EAQiC;EAC7B,aAAO,IAAIwG,aAAJ,CACLxG,YAAY,CAAC,cAAD,CADP,EAELA,YAAY,CAAC,UAAD,CAFP,EAGLA,YAAY,CAAC,YAAD,CAHP,EAILA,YAAY,CAAC,YAAD,CAJP,CAAP;EAMD;EAfH;;EAAA;EAAA;;MCtCqB6G;;;EACnB,eAAa5G,SAAb,EAAwB6G,SAAxB,EAAmC;EAAA;;EACjC,SAAK7G,SAAL,GAAiBA,SAAjB;EACA,SAAK2E,QAAL,GAAgBkC,SAAS,CAAClC,QAA1B;EACA,SAAKK,WAAL,GAAmB6B,SAAS,CAAC7B,WAA7B;EACA,SAAKJ,KAAL,GAAaiC,SAAS,CAACjC,KAAvB;EACA,SAAKQ,SAAL,GAAiByB,SAAS,CAACzB,SAA3B;EAEA,SAAK0B,2BAAL,GAAmC,IAAIzC,2BAAJ,EAAnC;EACA,SAAK0C,mBAAL,GAA2B,IAAIjB,mBAAJ,EAA3B;EACA,SAAKkB,mBAAL,GAA2B/D,SAA3B;EACD;;;;+CAEyB;EAAA;;EACxB,aAAOtD,mBAAmB,CAACsH,WAApB,CAAgC,KAAKjH,SAArC,EACJO,IADI,CACC,UAAAC,QAAQ,EAAI;EAAE,QAAA,KAAI,CAACwG,mBAAL,GAA2BxG,QAA3B;EAAqC,OADpD,EAEJI,KAFI,CAEE,UAAAC,KAAK;EAAA,eAAIC,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C,CAAJ;EAAA,OAFP,CAAP;EAGD;;;iDAE2B;EAC1B,UAAI,CAAC,KAAKmG,mBAAV,EAA+B;EAC7B,cAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;EACD;;EAED,UAAIC,oBAAoB,GAAG,IAAItB,oBAAJ,CACzB,KAAKlB,QADoB,EAEzB,KAAKK,WAFoB,EAGzB,KAAKJ,KAHoB,EAIzBiB,oBAAoB,CAACuB,kBAJI,EAKzB,KAAKhC,SALoB,CAA3B;EAOA,WAAK0B,2BAAL,CAAiCO,2BAAjC,CAA6D,KAAKL,mBAAlE,EAAuFG,oBAAvF;EACD;;;yDAEmC;EAClC,UAAI,CAAC,KAAKH,mBAAV,EAA+B;EAC7B,cAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;EACD;;EAED,UAAIC,oBAAoB,GAAG,IAAItB,oBAAJ,CACzB,KAAKlB,QADoB,EAEzB,KAAKK,WAFoB,EAGzB,KAAKJ,KAHoB,EAIzBiB,oBAAoB,CAACyB,mBAJI,EAKzB,KAAKlC,SALoB,CAA3B;EAOA,WAAK0B,2BAAL,CAAiCO,2BAAjC,CAA6D,KAAKL,mBAAlE,EAAuFG,oBAAvF;EACD;;;yCA6DmB;EAClB,UAAI,CAAC,KAAKH,mBAAV,EAA+B;EAC7B,cAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;EACD;;EAED,UAAIhF,YAAY,GAAGuB,KAAK,CAACG,OAAN,CAAc,eAAd,CAAnB;EACA,UAAIwC,IAAI,GAAG3C,KAAK,CAACG,OAAN,CAAc,MAAd,CAAX;;EAEA,UAAI,CAAC1B,YAAD,IAAiB,CAACkE,IAAtB,EAA4B;EAC1B,cAAM,IAAIc,KAAJ,CAAU,qCAAV,CAAN;EACD;;EAED,UAAIK,YAAY,GAAG,IAAIrB,YAAJ,CACjB,KAAKvB,QADY,EAEjBzC,YAFiB,EAGjBgE,YAAY,CAACsB,6BAHI,EAIjB,KAAKxC,WAJY,EAKjBoB,IALiB,CAAnB;EAQA,aAAO,KAAKW,mBAAL,CAAyBU,mBAAzB,CAA6C,KAAKT,mBAAlD,EAAuEO,YAAvE,EACJhH,IADI,CACC,UAAAC,QAAQ,EAAI;EAChB,YAAIkH,aAAa,GAAGnB,aAAa,CAAC5F,QAAd,CAAuBH,QAAvB,CAApB;EACAiD,QAAAA,KAAK,CAACK,OAAN,CAAc,cAAd,EAA8B4D,aAAa,CAAClB,WAA5C;EACA/C,QAAAA,KAAK,CAACK,OAAN,CAAc,UAAd,EAA0B4D,aAAa,CAACjB,OAAxC;EACD,OALI,CAAP;EAMD;;;gDAE0B;EACzB,UAAID,WAAW,GAAG/C,KAAK,CAACG,OAAN,CAAc,cAAd,CAAlB;EACA,UAAI3D,GAAG,GAAG,uDAAV;EACA,UAAIC,OAAO,GAAG;EACZC,QAAAA,MAAM,EAAE,KADI;EAEZE,QAAAA,OAAO,EAAE;EACP,0BAAgB,iCADT;EAEP,2BAAiB,YAAYmG;EAFtB;EAFG,OAAd;EAQA,aAAOlG,KAAK,CAACL,GAAD,EAAMC,OAAN,CAAL,CACJK,IADI,CACC,UAAAC,QAAQ;EAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;EAAA,OADT,EAEJG,KAFI,CAEE,UAAAC,KAAK;EAAA,eAAIC,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C,CAAJ;EAAA,OAFP,CAAP;EAGD;;;0CArG2B;EAC1B,aAAO4C,KAAK,CAACG,OAAN,CAAc,kBAAd,CAAP;EACD;;;4DAE6C;EAC5C,UAAIM,KAAK,GAAGT,KAAK,CAACG,OAAN,CAAc,OAAd,CAAZ;EACA,UAAI0B,MAAM,GAAGlD,SAAS,CAACE,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CAAtB;;EAEA,UAAI8C,MAAM,KAAK,IAAX,IAAmBpB,KAAK,KAAKoB,MAAM,CAAC,OAAD,CAAvC,EAAkD;EAChD,YAAIqC,QAAQ,GAAG;EACbC,UAAAA,IAAI,EAAE,eADO;EAEbC,UAAAA,OAAO,EAAE;EAFI,SAAf;EAIA,cAAM,IAAIX,KAAJ,CAAUlB,IAAI,CAACC,SAAL,CAAe0B,QAAf,CAAV,CAAN;EACD,OAND,MAMO,IAAIrC,MAAM,CAAC,OAAD,CAAV,EAAqB;EAC1B,YAAIqC,SAAQ,GAAG;EACbC,UAAAA,IAAI,EAAE7E,UAAU,CAACuC,MAAM,CAAC,OAAD,CAAP,CADH;EAEbuC,UAAAA,OAAO,EAAE9E,UAAU,CAACuC,MAAM,CAAC,mBAAD,CAAP;EAFN,SAAf;EAIA,cAAM,IAAI4B,KAAJ,CAAUlB,IAAI,CAACC,SAAL,CAAe0B,SAAf,CAAV,CAAN;EACD,OANM,MAMA;EACL,YAAIvB,IAAI,GAAGd,MAAM,CAAC,MAAD,CAAjB;;EACA,YAAIc,IAAJ,EAAU;EACR3C,UAAAA,KAAK,CAACK,OAAN,CAAc,MAAd,EAAsBsC,IAAtB;EACD;EACF;EACF;;;mDAEoC;EACnC,UAAIlC,KAAK,GAAGT,KAAK,CAACG,OAAN,CAAc,OAAd,CAAZ;EACA,UAAI0B,MAAM,GAAGlD,SAAS,CAACE,MAAM,CAACC,QAAP,CAAgBuF,IAAjB,CAAtB;;EAEA,UAAIxC,MAAM,KAAK,IAAX,IAAmBpB,KAAK,KAAKoB,MAAM,CAAC,OAAD,CAAvC,EAAkD;EAChD,YAAIqC,QAAQ,GAAG;EACbC,UAAAA,IAAI,EAAE,eADO;EAEbC,UAAAA,OAAO,EAAE;EAFI,SAAf;EAIA,cAAM,IAAIX,KAAJ,CAAUlB,IAAI,CAACC,SAAL,CAAe0B,QAAf,CAAV,CAAN;EACD,OAND,MAMO,IAAIrC,MAAM,CAAC,OAAD,CAAV,EAAqB;EAC1B,YAAIqC,UAAQ,GAAG;EACbC,UAAAA,IAAI,EAAE7E,UAAU,CAACuC,MAAM,CAAC,OAAD,CAAP,CADH;EAEbuC,UAAAA,OAAO,EAAE9E,UAAU,CAACuC,MAAM,CAAC,mBAAD,CAAP;EAFN,SAAf;EAIA,cAAM,IAAI4B,KAAJ,CAAUlB,IAAI,CAACC,SAAL,CAAe0B,UAAf,CAAV,CAAN;EACD,OANM,MAMA;EACL,YAAInB,WAAW,GAAGlB,MAAM,CAAC,cAAD,CAAxB;;EACA,YAAIkB,WAAJ,EAAiB;EACf/C,UAAAA,KAAK,CAACK,OAAN,CAAc,cAAd,EAA8B0C,WAA9B;EACD;;EAED,YAAIC,OAAO,GAAGnB,MAAM,CAAC,UAAD,CAApB;;EACA,YAAImB,OAAJ,EAAa;EACXhD,UAAAA,KAAK,CAACK,OAAN,CAAc,UAAd,EAA0B2C,OAA1B;EACD;EACF;;EAED,aAAOG,GAAG,CAACmB,SAAJ,EAAP;EACD;;;kCA8CmB;EAClB,aAAO;EACLvB,QAAAA,WAAW,EAAE/C,KAAK,CAACG,OAAN,CAAc,cAAd,CADR;EAEL1B,QAAAA,YAAY,EAAEuB,KAAK,CAACG,OAAN,CAAc,eAAd,CAFT;EAGL6C,QAAAA,OAAO,EAAEhD,KAAK,CAACG,OAAN,CAAc,UAAd,CAHJ;EAILK,QAAAA,KAAK,EAAER,KAAK,CAACG,OAAN,CAAc,OAAd,CAJF;EAKLM,QAAAA,KAAK,EAAET,KAAK,CAACG,OAAN,CAAc,OAAd;EALF,OAAP;EAOD;;;;;;;;;;;;"}