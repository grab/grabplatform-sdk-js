{"version":3,"file":"bundle.js","sources":["../src/open_id_configuration.ts","../node_modules/crypto-js/core.js","../node_modules/crypto-js/sha256.js","../node_modules/crypto-js/enc-base64.js","../src/utils.ts","../src/store.ts","../src/authorization_request_handler.ts","../src/token_request_handler.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport class OpenIDConfiguration {\n  authorizationEndpoint: string;\n  tokenEndpoint: string;\n  idTokenVerificationEndpoint: string;\n\n  constructor (\n    authorizationEndpoint: string,\n    tokenEndpoint: string,\n    idTokenVerificationEndpoint: string\n  ) {\n    this.authorizationEndpoint = authorizationEndpoint\n    this.tokenEndpoint = tokenEndpoint\n    this.idTokenVerificationEndpoint = idTokenVerificationEndpoint\n  }\n\n  static fromJSON (responseJSON: Object) : OpenIDConfiguration {\n    return new OpenIDConfiguration(\n      responseJSON['authorization_endpoint'],\n      responseJSON['token_endpoint'],\n      responseJSON['id_token_verification_endpoint']\n    )\n  }\n\n  static async fetchConfig (openIdUrl) : Promise<OpenIDConfiguration> {\n    const uri = `${openIdUrl}/.well-known/openid-configuration`\n    const options : RequestInit = {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    }\n    const response = await fetch(uri, options);\n    const config = await response.json();\n    return OpenIDConfiguration.fromJSON(config);\n  }\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport sha256 from 'crypto-js/sha256'\nimport Base64 from 'crypto-js/enc-base64'\nimport { WordArray } from 'crypto-js';\n\nexport function generateRandomString (length: number): string {\n  let text = ''\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return text\n}\n\nexport function base64URLEncode (str: string | WordArray): string {\n  return str.toString(Base64).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n}\n\nexport function generateCodeVerifier (len: number): string {\n  return base64URLEncode(generateRandomString(len))\n}\n\nexport function generateCodeChallenge (codeVerifier: string): string {\n  return base64URLEncode(sha256(codeVerifier))\n}\n\nexport function getParams (query = window.location.search) {\n  return query.replace(/^\\?|#/, '').split('&').reduce((json, item) => {\n    if (item) {\n      const splitItem = item.split('=').map((value) => decodeURIComponent(value))\n      json[splitItem[0]] = splitItem[1]\n    }\n    return json\n  }, {})\n}\n\nexport function htmlEncode (html: string) {\n  if (!html) {\n    return undefined\n  }\n  var anchorNode = document.createElement('a')\n  anchorNode.appendChild(document.createTextNode(html))\n  return anchorNode.innerHTML\n}\n","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst namespace = 'grabid'\n\nexport default class Store {\n  static getKey (key: string): string {\n    return `${namespace}:${key}`\n  }\n\n  static getItem (key:string): any {\n    return window.localStorage.getItem(this.getKey(key))\n  }\n\n  static setItem (key: string, value: any) {\n    window.localStorage.setItem(this.getKey(key), value)\n  }\n\n  static removeItem (key: string) {\n    window.localStorage.removeItem(this.getKey(key))\n  }\n\n  static clear () {\n    window.localStorage.clear()\n  }\n}\n","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { generateCodeChallenge, generateCodeVerifier, generateRandomString } from './utils'\nimport Store from './store'\nimport { OpenIDConfiguration } from './open_id_configuration';\n\nconst nonce = generateRandomString(16)\nconst state = generateRandomString(7)\nconst codeVerifier = generateCodeVerifier(64)\nconst codeChallenge = generateCodeChallenge(codeVerifier)\nconst codeChallengeMethod = 'S256'\n\nexport class AuthorizationRequestHandler {\n  performAuthorizationRequest (configuration: OpenIDConfiguration, request: AuthorizationRequest): void {\n    let loginReturnUri = window.location.href\n    if (request.loginReturnUri !== undefined) {\n      loginReturnUri = request.loginReturnUri\n    }\n    Store.setItem('login_return_uri', loginReturnUri)\n    Store.setItem('nonce', nonce)\n    Store.setItem('state', state)\n    Store.setItem('code_verifier', codeVerifier)\n\n    let requestMap: any = {\n      client_id: request.clientId,\n      scope: request.scope,\n      response_type: request.responseType,\n      redirect_uri: request.redirectUri,\n      nonce: nonce,\n      state: state,\n      code_challenge_method: codeChallengeMethod,\n      code_challenge: codeChallenge,\n      acr_values: request.acrValues,\n      id_token_hint: request.id_token_hint,\n    }\n\n    if (request.request) {\n      requestMap.request = request.request;\n    }\n\n    let baseUrl = configuration.authorizationEndpoint\n    let params = Object.keys(requestMap).map(key => `${key}=${requestMap[key]}`).join('&')\n\n    let url = `${baseUrl}?${params}`\n\n    window.location.assign(url)\n  }\n}\n\n/*\nDefines parameters needed to make an authorization request\nclientId: The Grab Client ID issued to the app developer by Grab.\nredirectUri: The uri that the browser should redirect to after completing authorization. This must be one of the uris registered with Grab and is associated with your Client ID.\nscope: A comma separated list of scopes for which your application is requesting permission.\nresponseType: The type of authorization expected in the response. Can be either a token or an access code\nacrValues: Authentication Context Class Reference Values. This provides the context for your request, and the appropriate values will vary based on your use case.\nloginReturnUri: Optional parameter - if provided, will store the provided value in local storage as the login return URI. If absent, window.location.href will be stored as the login return uri\n*/\nexport class AuthorizationRequest {\n  static RESPONSE_TYPE_CODE = 'code'\n  static RESPONSE_TYPE_TOKEN = 'token'\n\n  clientId: string;\n  redirectUri: string;\n  scope: string;\n  responseType: string;\n  acrValues: string;\n  loginReturnUri: string;\n  id_token_hint: string;\n  request: string;\n\n  constructor (\n    clientId: string,\n    redirectUri: string,\n    scope: string,\n    responseType: string,\n    acrValues: string,\n    loginReturnUri: string,\n    id_token_hint?: string,\n    request?: string\n  ) {\n    this.clientId = clientId\n    this.redirectUri = redirectUri\n    this.scope = scope\n    this.responseType = responseType\n    this.acrValues = acrValues\n    this.loginReturnUri = loginReturnUri\n    this.id_token_hint = id_token_hint\n    this.request = request\n  }\n}\n","import { OpenIDConfiguration } from \"./open_id_configuration\";\n\n/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport class TokenRequestHandler {\n  async performTokenRequest (configuration: OpenIDConfiguration, request: TokenRequest): Promise<any> {\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(request)\n    }\n\n    try {\n      const response = await fetch(configuration.tokenEndpoint, options);\n      return await response.json();\n    }\n    catch (error) {\n      console.error('failed to POST token request', error);\n    }\n  }\n}\n\nexport class TokenRequest {\n    static GRANT_TYPE_AUTHORIZATION_CODE = 'authorization_code';\n\n    clientId: string;\n    codeVerifier: string;\n    grantType: string;\n    redirectUri: string;\n    code: string;\n\n    constructor (\n      clientId: string,\n      codeVerifier: string,\n      grantType: string,\n      redirectUri: string,\n      code: string\n    ) {\n      this.clientId = clientId\n      this.codeVerifier = codeVerifier\n      this.grantType = grantType\n      this.redirectUri = redirectUri\n      this.code = code\n    }\n\n    toJSON () {\n      return {\n        client_id: this.clientId,\n        code_verifier: this.codeVerifier,\n        grant_type: this.grantType,\n        redirect_uri: this.redirectUri,\n        code: this.code\n      }\n    }\n}\n\nexport class TokenResponse {\n  accessToken: string;\n  idToken: string;\n  tokenType: string;\n  expiresIn: string;\n\n  constructor (accessToken: string, idToken: string, tokenType: string, expiresIn: string) {\n    this.accessToken = accessToken\n    this.idToken = idToken\n    this.tokenType = tokenType\n    this.expiresIn = expiresIn\n  }\n\n  static fromJSON (responseJSON: Object) {\n    return new TokenResponse(\n      responseJSON['access_token'],\n      responseJSON['id_token'],\n      responseJSON['token_type'],\n      responseJSON['expires_in']\n    )\n  }\n}\n","/**\n * Copyright (c) Grab Taxi Holdings PTE LTD (GRAB)\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { OpenIDConfiguration } from './open_id_configuration'\nimport { AuthorizationRequest, AuthorizationRequestHandler } from './authorization_request_handler'\nimport { TokenRequest, TokenRequestHandler, TokenResponse } from './token_request_handler'\nimport { getParams, htmlEncode } from './utils'\nimport Store from './store'\nimport { GrabConfig, AcrValues } from './grabConfig';\nimport { AuthenticationData } from './authenticationData';\n\nexport default class App {\n  openIdUrl: string;\n  clientId: string;\n  redirectUri: string;\n  scope: string;\n  acrValues: string;\n  request: string;\n\n  authorizationRequestHandler: AuthorizationRequestHandler;\n  tokenRequestHandler: TokenRequestHandler;\n  openIDConfiguration: OpenIDConfiguration;\n\n  static GrabUrls = {\n    STAGING: 'https://api.stg-myteksi.com/grabid/v1/oauth2',\n    PRODUCTION: 'https://api.grab.com/grabid/v1/oauth2',\n  }\n\n  static GrabPartnerUrls = {\n    STAGING: 'https://partner-api.stg-myteksi.com/grabid/v1/oauth2',\n    PRODUCTION: 'https://partner-api.grab.com/grabid/v1/oauth2',\n  }\n\n  constructor (openIdUrl: string, appConfig: GrabConfig) {\n    this.openIdUrl = openIdUrl\n    this.clientId = appConfig.clientId\n    this.redirectUri = appConfig.redirectUri\n    this.scope = appConfig.scope\n    this.request = appConfig.request\n    if (typeof(appConfig.acrValues) === 'string') {\n      this.acrValues = appConfig.acrValues;\n    } else {\n      this.acrValues = this.getAcrValuesString(appConfig.acrValues);\n    }\n\n    this.authorizationRequestHandler = new AuthorizationRequestHandler()\n    this.tokenRequestHandler = new TokenRequestHandler()\n    this.openIDConfiguration = undefined\n  }\n\n  async getOpenIdConfiguration () : Promise<void> {\n    try {\n      const response = await OpenIDConfiguration.fetchConfig(this.openIdUrl);\n      this.openIDConfiguration = response;\n    }\n    catch (error) {\n      console.error(error);\n      throw new Error(\"Unable to fetch OpenID Configuration\");\n    }\n  }\n\n  getAcrValuesString (acrValues: AcrValues) : string {\n    let acrValuesArray: string[] = [];\n    if (!acrValues) {\n      return '';\n    }\n    if(acrValues.service) {\n      acrValuesArray.push(`service:${acrValues.service}`)\n    }\n    if(acrValues.consentContext) {\n      const contextKeys = Object.keys(acrValues.consentContext);\n      const contextString = contextKeys.map(key => `${key}=${acrValues.consentContext[key]}`)\n        .join(',');\n      acrValuesArray.push(`consent_ctx:${contextString}`);\n    }\n    if(acrValues.additionalValues) {\n      const additionalValuesKeys = Object.keys(acrValues.additionalValues);\n      additionalValuesKeys.map(\n        key => {\n          if(key.includes(':')) {\n            throw new Error('Acr Value keys cannot contain a semicolon');\n          }\n          acrValuesArray.push(`${key}:${acrValues.additionalValues[key]}`) \n        }\n      );\n    }\n    \n    return acrValuesArray.join(' ');\n  }\n\n  async makeAuthorizationRequest (loginReturnUrl: string, id_token_hint: string): Promise<void> {\n    if (!this.openIDConfiguration) {\n      await this.getOpenIdConfiguration();\n    }\n\n    let authorizationRequest = new AuthorizationRequest(\n      this.clientId,\n      this.redirectUri,\n      this.scope,\n      AuthorizationRequest.RESPONSE_TYPE_CODE,\n      this.acrValues,\n      loginReturnUrl,\n      id_token_hint,\n      this.request,\n    )\n    this.authorizationRequestHandler.performAuthorizationRequest(this.openIDConfiguration, authorizationRequest)\n  }\n\n  async makeImplicitAuthorizationRequest (loginReturnUrl: string, id_token_hint: string): Promise<void> {\n    if (!this.openIDConfiguration) {\n      await this.getOpenIdConfiguration();\n    }\n\n    let authorizationRequest = new AuthorizationRequest(\n      this.clientId,\n      this.redirectUri,\n      this.scope,\n      AuthorizationRequest.RESPONSE_TYPE_TOKEN,\n      this.acrValues,\n      loginReturnUrl,\n      id_token_hint,\n      this.request,\n    )\n    this.authorizationRequestHandler.performAuthorizationRequest(this.openIDConfiguration, authorizationRequest)\n  }\n\n  static getLoginReturnURI (): string {\n    return Store.getItem('login_return_uri')\n  }\n\n  static handleAuthorizationCodeFlowResponse () {\n    let state = Store.getItem('state')\n    let params = getParams(window.location.search)\n\n    if (params === null || state !== params['state']) {\n      let errorMsg = {\n        name: 'code mismatch',\n        message: 'This could be caused by multiple browser windows attempting to authenticate to GrabId at the same time'\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else if (params['error']) {\n      let errorMsg = {\n        name: htmlEncode(params['error']),\n        message: htmlEncode(params['error_description'])\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else {\n      let code = params['code']\n      if (code) {\n        Store.setItem('code', code)\n      }\n    }\n  }\n\n  static handleImplicitFlowResponse () {\n    let state = Store.getItem('state')\n    let params = getParams(window.location.hash)\n\n    if (params === null || state !== params['state']) {\n      let errorMsg = {\n        name: 'code mismatch',\n        message: 'This could be caused by multiple browser windows attempting to authenticate to GrabId at the same time'\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else if (params['error']) {\n      let errorMsg = {\n        name: htmlEncode(params['error']),\n        message: htmlEncode(params['error_description'])\n      }\n      throw new Error(JSON.stringify(errorMsg))\n    } else {\n      let accessToken = params['access_token']\n      if (accessToken) {\n        Store.setItem('access_token', accessToken)\n      }\n\n      let idToken = params['id_token']\n      if (idToken) {\n        Store.setItem('id_token', idToken)\n      }\n    }\n\n    return App.getResult()\n  }\n\n  async makeTokenRequest () {\n    if (!this.openIDConfiguration) {\n      await this.getOpenIdConfiguration();\n    }\n\n    let codeVerifier = Store.getItem('code_verifier')\n    let code = Store.getItem('code')\n\n    if (!codeVerifier || !code) {\n      throw new Error('Please get authorization code first')\n    }\n\n    let tokenRequest = new TokenRequest(\n      this.clientId,\n      codeVerifier,\n      TokenRequest.GRANT_TYPE_AUTHORIZATION_CODE,\n      this.redirectUri,\n      code\n    )\n\n    const response = await this.tokenRequestHandler.performTokenRequest(this.openIDConfiguration, tokenRequest);\n    let tokenResponse = TokenResponse.fromJSON(response);\n    Store.setItem('access_token', tokenResponse.accessToken);\n    Store.setItem('id_token', tokenResponse.idToken);\n  }\n\n  async makeTestEndpointRequest () {\n    console.log(\"This function will be deprecated as of next release.\");\n    let accessToken = Store.getItem('access_token')\n    let uri = 'https://api.stg-myteksi.com/grabid/v1/oauth2/test_res'\n    let options = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }\n\n    try {\n      const response = await fetch(uri, options);\n      return await response.json();\n    }\n    catch (error) {\n      console.error('failed to make test request', error);\n    }\n  }\n\n  static getResult (): AuthenticationData {\n    return {\n      accessToken: Store.getItem('access_token'),\n      codeVerifier: Store.getItem('code_verifier'),\n      idToken: Store.getItem('id_token'),\n      nonce: Store.getItem('nonce'),\n      state: Store.getItem('state')\n    }\n  }\n\n  static getGrabUrls () {\n    return App.GrabUrls;\n  }\n}\n"],"names":["this","require$$0","Base64"],"mappings":"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"}